{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _getTag = _interopRequireDefault(require(\"./.internal/getTag.js\"));\n\nvar _nodeTypes = _interopRequireDefault(require(\"./.internal/nodeTypes.js\"));\n\nvar _isObjectLike = _interopRequireDefault(require(\"./isObjectLike.js\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n/** Used to match `toStringTag` values of typed arrays. */\n\n\nvar reTypedTag = /^\\[object (?:Float(?:32|64)|(?:Int|Uint)(?:8|16|32)|Uint8Clamped)Array\\]$/;\n/* Node.js helper references. */\n\nvar nodeIsTypedArray = _nodeTypes[\"default\"] && _nodeTypes[\"default\"].isTypedArray;\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * isTypedArray(new Uint8Array)\n * // => true\n *\n * isTypedArray([])\n * // => false\n */\n\nvar isTypedArray = nodeIsTypedArray ? function (value) {\n  return nodeIsTypedArray(value);\n} : function (value) {\n  return (0, _isObjectLike[\"default\"])(value) && reTypedTag.test((0, _getTag[\"default\"])(value));\n};\nvar _default = isTypedArray;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["C:/Users/admin/react/steprotect/client/node_modules/@bit/lodash.lodash.is-typed-array/dist/isTypedArray.js"],"names":["Object","defineProperty","exports","value","_getTag","_interopRequireDefault","require","_nodeTypes","_isObjectLike","obj","__esModule","reTypedTag","nodeIsTypedArray","isTypedArray","test","_default"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAAC,SAAD,CAAP,GAAqB,KAAK,CAA1B;;AAEA,IAAIE,OAAO,GAAGC,sBAAsB,CAACC,OAAO,CAAC,uBAAD,CAAR,CAApC;;AAEA,IAAIC,UAAU,GAAGF,sBAAsB,CAACC,OAAO,CAAC,0BAAD,CAAR,CAAvC;;AAEA,IAAIE,aAAa,GAAGH,sBAAsB,CAACC,OAAO,CAAC,mBAAD,CAAR,CAA1C;;AAEA,SAASD,sBAAT,CAAgCI,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAE,eAAWA;AAAb,GAArC;AAA0D;AAEjG;;;AACA,IAAIE,UAAU,GAAG,2EAAjB;AACA;;AAEA,IAAIC,gBAAgB,GAAGL,UAAU,CAAC,SAAD,CAAV,IAAyBA,UAAU,CAAC,SAAD,CAAV,CAAsBM,YAAtE;AACA;;;;;;;;;;;;;;;;AAgBA,IAAIA,YAAY,GAAGD,gBAAgB,GAAG,UAAUT,KAAV,EAAiB;AACrD,SAAOS,gBAAgB,CAACT,KAAD,CAAvB;AACD,CAFkC,GAE/B,UAAUA,KAAV,EAAiB;AACnB,SAAO,CAAC,GAAGK,aAAa,CAAC,SAAD,CAAjB,EAA8BL,KAA9B,KAAwCQ,UAAU,CAACG,IAAX,CAAgB,CAAC,GAAGV,OAAO,CAAC,SAAD,CAAX,EAAwBD,KAAxB,CAAhB,CAA/C;AACD,CAJD;AAKA,IAAIY,QAAQ,GAAGF,YAAf;AACAX,OAAO,CAAC,SAAD,CAAP,GAAqBa,QAArB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _getTag = _interopRequireDefault(require(\"./.internal/getTag.js\"));\n\nvar _nodeTypes = _interopRequireDefault(require(\"./.internal/nodeTypes.js\"));\n\nvar _isObjectLike = _interopRequireDefault(require(\"./isObjectLike.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/** Used to match `toStringTag` values of typed arrays. */\nvar reTypedTag = /^\\[object (?:Float(?:32|64)|(?:Int|Uint)(?:8|16|32)|Uint8Clamped)Array\\]$/;\n/* Node.js helper references. */\n\nvar nodeIsTypedArray = _nodeTypes[\"default\"] && _nodeTypes[\"default\"].isTypedArray;\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * isTypedArray(new Uint8Array)\n * // => true\n *\n * isTypedArray([])\n * // => false\n */\n\nvar isTypedArray = nodeIsTypedArray ? function (value) {\n  return nodeIsTypedArray(value);\n} : function (value) {\n  return (0, _isObjectLike[\"default\"])(value) && reTypedTag.test((0, _getTag[\"default\"])(value));\n};\nvar _default = isTypedArray;\nexports[\"default\"] = _default;\n\n//# sourceMappingURL=isTypedArray.js.map"]},"metadata":{},"sourceType":"script"}