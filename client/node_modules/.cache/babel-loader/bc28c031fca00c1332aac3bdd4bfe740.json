{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _ListCache = _interopRequireDefault(require(\"./ListCache.js\"));\n\nvar _MapCache = _interopRequireDefault(require(\"./MapCache.js\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n/** Used as the size to enable large array optimizations. */\n\n\nvar LARGE_ARRAY_SIZE = 200;\n\nvar Stack = /*#__PURE__*/function () {\n  /**\n   * Creates a stack cache object to store key-value pairs.\n   *\n   * @private\n   * @constructor\n   * @param {Array} [entries] The key-value pairs to cache.\n   */\n  function Stack(entries) {\n    _classCallCheck(this, Stack);\n\n    var data = this.__data__ = new _ListCache[\"default\"](entries);\n    this.size = data.size;\n  }\n  /**\n   * Removes all key-value entries from the stack.\n   *\n   * @memberOf Stack\n   */\n\n\n  _createClass(Stack, [{\n    key: \"clear\",\n    value: function clear() {\n      this.__data__ = new _ListCache[\"default\"]();\n      this.size = 0;\n    }\n    /**\n     * Removes `key` and its value from the stack.\n     *\n     * @memberOf Stack\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n\n  }, {\n    key: \"delete\",\n    value: function _delete(key) {\n      var data = this.__data__;\n      var result = data['delete'](key);\n      this.size = data.size;\n      return result;\n    }\n    /**\n     * Gets the stack value for `key`.\n     *\n     * @memberOf Stack\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n\n  }, {\n    key: \"get\",\n    value: function get(key) {\n      return this.__data__.get(key);\n    }\n    /**\n     * Checks if a stack value for `key` exists.\n     *\n     * @memberOf Stack\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n\n  }, {\n    key: \"has\",\n    value: function has(key) {\n      return this.__data__.has(key);\n    }\n    /**\n     * Sets the stack `key` to `value`.\n     *\n     * @memberOf Stack\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the stack cache instance.\n     */\n\n  }, {\n    key: \"set\",\n    value: function set(key, value) {\n      var data = this.__data__;\n\n      if (data instanceof _ListCache[\"default\"]) {\n        var pairs = data.__data__;\n\n        if (pairs.length < LARGE_ARRAY_SIZE - 1) {\n          pairs.push([key, value]);\n          this.size = ++data.size;\n          return this;\n        }\n\n        data = this.__data__ = new _MapCache[\"default\"](pairs);\n      }\n\n      data.set(key, value);\n      this.size = data.size;\n      return this;\n    }\n  }]);\n\n  return Stack;\n}();\n\nvar _default = Stack;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["C:/Users/admin/react/steprotect/client/node_modules/@bit/lodash.lodash.internal.stack/dist/Stack.js"],"names":["Object","defineProperty","exports","value","_ListCache","_interopRequireDefault","require","_MapCache","obj","__esModule","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","_createClass","protoProps","staticProps","prototype","LARGE_ARRAY_SIZE","Stack","entries","data","__data__","size","clear","_delete","result","get","has","set","pairs","push","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _ListCache = _interopRequireDefault(require(\"./ListCache.js\"));\n\nvar _MapCache = _interopRequireDefault(require(\"./MapCache.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\nvar Stack = /*#__PURE__*/function () {\n  /**\n   * Creates a stack cache object to store key-value pairs.\n   *\n   * @private\n   * @constructor\n   * @param {Array} [entries] The key-value pairs to cache.\n   */\n  function Stack(entries) {\n    _classCallCheck(this, Stack);\n\n    var data = this.__data__ = new _ListCache[\"default\"](entries);\n    this.size = data.size;\n  }\n  /**\n   * Removes all key-value entries from the stack.\n   *\n   * @memberOf Stack\n   */\n\n\n  _createClass(Stack, [{\n    key: \"clear\",\n    value: function clear() {\n      this.__data__ = new _ListCache[\"default\"]();\n      this.size = 0;\n    }\n    /**\n     * Removes `key` and its value from the stack.\n     *\n     * @memberOf Stack\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n\n  }, {\n    key: \"delete\",\n    value: function _delete(key) {\n      var data = this.__data__;\n      var result = data['delete'](key);\n      this.size = data.size;\n      return result;\n    }\n    /**\n     * Gets the stack value for `key`.\n     *\n     * @memberOf Stack\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n\n  }, {\n    key: \"get\",\n    value: function get(key) {\n      return this.__data__.get(key);\n    }\n    /**\n     * Checks if a stack value for `key` exists.\n     *\n     * @memberOf Stack\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n\n  }, {\n    key: \"has\",\n    value: function has(key) {\n      return this.__data__.has(key);\n    }\n    /**\n     * Sets the stack `key` to `value`.\n     *\n     * @memberOf Stack\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the stack cache instance.\n     */\n\n  }, {\n    key: \"set\",\n    value: function set(key, value) {\n      var data = this.__data__;\n\n      if (data instanceof _ListCache[\"default\"]) {\n        var pairs = data.__data__;\n\n        if (pairs.length < LARGE_ARRAY_SIZE - 1) {\n          pairs.push([key, value]);\n          this.size = ++data.size;\n          return this;\n        }\n\n        data = this.__data__ = new _MapCache[\"default\"](pairs);\n      }\n\n      data.set(key, value);\n      this.size = data.size;\n      return this;\n    }\n  }]);\n\n  return Stack;\n}();\n\nvar _default = Stack;\nexports[\"default\"] = _default;\n\n//# sourceMappingURL=Stack.js.map"]},"metadata":{},"sourceType":"script"}