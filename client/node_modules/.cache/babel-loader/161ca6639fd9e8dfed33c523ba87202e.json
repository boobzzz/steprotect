{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\react\\\\steprotect\\\\client\\\\src\\\\components\\\\Header\\\\Header.js\";\nimport React, { useState, useEffect } from 'react';\nimport { NavLink } from \"react-router-dom\";\nimport HamburgerMenu from 'react-hamburger-menu';\nimport NavBar from './NavBar/NavBar';\nimport FormOrder from '../Form/Order/FormOrder';\nimport ModalContainer from '../UI/Modal/Modal';\nimport classes from './Header.module.css';\nimport logoVr from \"../../assets/logo/logo_vr.svg\";\nimport logoHr from \"../../assets/logo/logo_hr.svg\";\n\nconst Header = props => {\n  const [scrolled, setScrolled] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [modal, setModal] = useState(false);\n  useEffect(() => {\n    window.addEventListener('scroll', () => {\n      const isTop = window.scrollY > 1;\n      isTop ? setScrolled(true) : setScrolled(false);\n    });\n  }, []);\n\n  const toggleMenu = () => setOpen(!open);\n\n  const toggleModal = () => setModal(!modal);\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"header\", {\n    className: scrolled ? classes.Fixed : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.Logo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: !scrolled ? logoVr : logoHr,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: open ? `${classes.Menu} ${classes.Show}` : classes.Menu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(HamburgerMenu, {\n    isOpen: open,\n    menuClicked: toggleMenu,\n    width: 40,\n    height: 20,\n    strokeWidth: 4,\n    color: \"#FF0000\",\n    animationDuration: 0.3,\n    className: classes.Hamburger,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(NavBar, {\n    clicked: toggleModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(NavBar, {\n    clicked: toggleModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(ModalContainer, {\n    modal: modal,\n    toggle: toggleModal,\n    title: \"\\u0417\\u0430\\u043C\\u043E\\u0432\\u043B\\u0435\\u043D\\u043D\\u044F\",\n    modalBody: /*#__PURE__*/React.createElement(FormOrder, {\n      modalShown: modal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 28\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default Header;","map":{"version":3,"sources":["C:/Users/admin/react/steprotect/client/src/components/Header/Header.js"],"names":["React","useState","useEffect","NavLink","HamburgerMenu","NavBar","FormOrder","ModalContainer","classes","Header","props","scrolled","setScrolled","open","setOpen","modal","setModal","window","addEventListener","isTop","scrollY","toggleMenu","toggleModal","Fixed","Logo","logoVr","logoHr","Menu","Show","Hamburger"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport HamburgerMenu from 'react-hamburger-menu';\r\n\r\nimport NavBar from './NavBar/NavBar';\r\nimport FormOrder from '../Form/Order/FormOrder';\r\nimport ModalContainer from '../UI/Modal/Modal';\r\nimport classes from './Header.module.css';\r\n\r\nimport logoVr from '../../assets/logo/logo_vr.svg';\r\nimport logoHr from '../../assets/logo/logo_hr.svg';\r\n\r\nconst Header = (props) => {\r\n    const [ scrolled, setScrolled ] = useState(false)\r\n    const [ open, setOpen ] = useState(false)\r\n    const [ modal, setModal ] = useState(false)\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('scroll', () => {\r\n            const isTop = window.scrollY > 1\r\n            isTop ? setScrolled(true) : setScrolled(false)\r\n        })\r\n    }, [])\r\n\r\n    const toggleMenu = () => setOpen(!open)\r\n\r\n    const toggleModal = () => setModal(!modal)\r\n\r\n    return (\r\n        <>\r\n            <header className={scrolled ? classes.Fixed : null}>\r\n                <div className=\"wrapper\">\r\n                    <div className={classes.Logo}>\r\n                        <NavLink to=\"/\">\r\n                            <img src={!scrolled ? logoVr : logoHr} alt=\"\"/>\r\n                        </NavLink>\r\n                    </div>\r\n                    <div className={open\r\n                                    ? `${classes.Menu} ${classes.Show}`\r\n                                    : classes.Menu}>\r\n                        <HamburgerMenu\r\n                            isOpen={open}\r\n                            menuClicked={toggleMenu}\r\n                            width={40}\r\n                            height={20}\r\n                            strokeWidth={4}\r\n                            color=\"#FF0000\"\r\n                            animationDuration={0.3}\r\n                            className={classes.Hamburger} />\r\n                        <NavBar clicked={toggleModal} />\r\n                        <NavBar clicked={toggleModal} />\r\n                    </div>\r\n                </div>\r\n            </header>\r\n            <ModalContainer\r\n                modal={modal}\r\n                toggle={toggleModal}\r\n                title=\"Замовлення\"\r\n                modalBody={<FormOrder modalShown={modal} />} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n"]},"metadata":{},"sourceType":"module"}