{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n/**\n * Converts `value` to a plain object flattening inherited enumerable string\n * keyed properties of `value` to own properties of the plain object.\n *\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {Object} Returns the converted plain object.\n * @example\n *\n * function Foo() {\n *   this.b = 2\n * }\n *\n * Foo.prototype.c = 3\n *\n * assign({ 'a': 1 }, new Foo)\n * // => { 'a': 1, 'b': 2 }\n *\n * assign({ 'a': 1 }, toPlainObject(new Foo))\n * // => { 'a': 1, 'b': 2, 'c': 3 }\n */\n\nfunction toPlainObject(value) {\n  value = Object(value);\n  var result = {};\n\n  for (var key in value) {\n    result[key] = value[key];\n  }\n\n  return result;\n}\n\nvar _default = toPlainObject;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["C:/Users/admin/react/steprotect/client/node_modules/@bit/lodash.lodash.to-plain-object/dist/toPlainObject.js"],"names":["Object","defineProperty","exports","value","toPlainObject","result","key","_default"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAAC,SAAD,CAAP,GAAqB,KAAK,CAA1B;AAEA;;;;;;;;;;;;;;;;;;;;;;;AAsBA,SAASE,aAAT,CAAuBD,KAAvB,EAA8B;AAC5BA,EAAAA,KAAK,GAAGH,MAAM,CAACG,KAAD,CAAd;AACA,MAAIE,MAAM,GAAG,EAAb;;AAEA,OAAK,IAAIC,GAAT,IAAgBH,KAAhB,EAAuB;AACrBE,IAAAA,MAAM,CAACC,GAAD,CAAN,GAAcH,KAAK,CAACG,GAAD,CAAnB;AACD;;AAED,SAAOD,MAAP;AACD;;AAED,IAAIE,QAAQ,GAAGH,aAAf;AACAF,OAAO,CAAC,SAAD,CAAP,GAAqBK,QAArB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\n/**\n * Converts `value` to a plain object flattening inherited enumerable string\n * keyed properties of `value` to own properties of the plain object.\n *\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {Object} Returns the converted plain object.\n * @example\n *\n * function Foo() {\n *   this.b = 2\n * }\n *\n * Foo.prototype.c = 3\n *\n * assign({ 'a': 1 }, new Foo)\n * // => { 'a': 1, 'b': 2 }\n *\n * assign({ 'a': 1 }, toPlainObject(new Foo))\n * // => { 'a': 1, 'b': 2, 'c': 3 }\n */\nfunction toPlainObject(value) {\n  value = Object(value);\n  var result = {};\n\n  for (var key in value) {\n    result[key] = value[key];\n  }\n\n  return result;\n}\n\nvar _default = toPlainObject;\nexports[\"default\"] = _default;\n\n//# sourceMappingURL=toPlainObject.js.map"]},"metadata":{},"sourceType":"script"}