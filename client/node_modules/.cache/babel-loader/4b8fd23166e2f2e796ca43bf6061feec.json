{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _baseAssignValue = _interopRequireDefault(require(\"./baseAssignValue.js\"));\n\nvar _eq = _interopRequireDefault(require(\"../eq.js\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n/**\n * This function is like `assignValue` except that it doesn't assign\n * `undefined` values.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\n\n\nfunction assignMergeValue(object, key, value) {\n  if (value !== undefined && !(0, _eq[\"default\"])(object[key], value) || value === undefined && !(key in object)) {\n    (0, _baseAssignValue[\"default\"])(object, key, value);\n  }\n}\n\nvar _default = assignMergeValue;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["C:/Users/admin/react/steprotect/client/node_modules/@bit/lodash.lodash.internal.assign-merge-value/dist/.internal/assignMergeValue.js"],"names":["Object","defineProperty","exports","value","_baseAssignValue","_interopRequireDefault","require","_eq","obj","__esModule","assignMergeValue","object","key","undefined","_default"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAAC,SAAD,CAAP,GAAqB,KAAK,CAA1B;;AAEA,IAAIE,gBAAgB,GAAGC,sBAAsB,CAACC,OAAO,CAAC,sBAAD,CAAR,CAA7C;;AAEA,IAAIC,GAAG,GAAGF,sBAAsB,CAACC,OAAO,CAAC,UAAD,CAAR,CAAhC;;AAEA,SAASD,sBAAT,CAAgCG,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAE,eAAWA;AAAb,GAArC;AAA0D;AAEjG;;;;;;;;;;;AASA,SAASE,gBAAT,CAA0BC,MAA1B,EAAkCC,GAAlC,EAAuCT,KAAvC,EAA8C;AAC5C,MAAIA,KAAK,KAAKU,SAAV,IAAuB,CAAC,CAAC,GAAGN,GAAG,CAAC,SAAD,CAAP,EAAoBI,MAAM,CAACC,GAAD,CAA1B,EAAiCT,KAAjC,CAAxB,IAAmEA,KAAK,KAAKU,SAAV,IAAuB,EAAED,GAAG,IAAID,MAAT,CAA9F,EAAgH;AAC9G,KAAC,GAAGP,gBAAgB,CAAC,SAAD,CAApB,EAAiCO,MAAjC,EAAyCC,GAAzC,EAA8CT,KAA9C;AACD;AACF;;AAED,IAAIW,QAAQ,GAAGJ,gBAAf;AACAR,OAAO,CAAC,SAAD,CAAP,GAAqBY,QAArB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _baseAssignValue = _interopRequireDefault(require(\"./baseAssignValue.js\"));\n\nvar _eq = _interopRequireDefault(require(\"../eq.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * This function is like `assignValue` except that it doesn't assign\n * `undefined` values.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignMergeValue(object, key, value) {\n  if (value !== undefined && !(0, _eq[\"default\"])(object[key], value) || value === undefined && !(key in object)) {\n    (0, _baseAssignValue[\"default\"])(object, key, value);\n  }\n}\n\nvar _default = assignMergeValue;\nexports[\"default\"] = _default;\n\n//# sourceMappingURL=assignMergeValue.js.map"]},"metadata":{},"sourceType":"script"}